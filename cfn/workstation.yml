AWSTemplateFormatVersion: '2010-09-09'
Description: "spins up workstation instances for Big Data labs"
Parameters:
  BucketName: 
    Type: String
  ObjectKey: 
    Type: String
Resources:
  bigDataLinuxWorkstation:
    Type: AWS::EC2::Instance
    Version: '2009-05-15'
    Properties:
      ImageId: ami-a4c7edb2
      KeyName: jonny-labs
      InstanceType: m4.large
      IamInstanceProfile:
        !Ref RootInstanceProfile
      SecurityGroups:
        - Ref: workstationSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          yum group install Development Tools
          mkdir ~/emrdata
          export DSS_PATH=$HOME/emrdata
          echo 'export DSS_PATH=$HOME/emrdata' > ~/.bash_profile'
          aws s3 cp s3://${BucketName}/${ObjectKey} .
          cp 2.17.2/dbgen/makefile.suite 2.17.2/dbgen/makefile
          sed -e 's/CC      =/CC      = gcc/;s/DATABASE=/DATABASE= POSTGRES/; s/MACHINE =/MACHINE = LINUX/; s/WORKLOAD =/WORKLOAD = TPCH/' 2.17.2/dbgen/makefile.suite > 2.17.2/dbgen/makefile
          pushd 2.17.2/dbgen
          make
          ./dbgen -v -T o -s 10
          popd


  bigDataWindowsWorkstation:
    Type: AWS::EC2::Instance
    Version: '2009-05-15'
    Properties:
      ImageId: ami-bd5b7dab
      KeyName: jonny-labs
      InstanceType: t2.micro
      IamInstanceProfile:
        !Ref RootInstanceProfile
      SecurityGroups:
        - Ref: workstationSecurityGroup
  workstationSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties: 
      GroupDescription: "security group for big data workstations"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '5589'
        ToPort: '5589'
        CidrIp: 0.0.0.0/0
  RootRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
  RolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: root
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: "*"
          Resource: "*"
      Roles:
      - !Ref RootRole
  RootInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - !Ref RootRole



